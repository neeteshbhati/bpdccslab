Grammar

    0 $accept: prm $end

    1 prm: HEADER MAIN_TYPE MAIN LB RB LCB BODY RCB

    2 BODY: DECLARATION_STATEMENTS PROGRAM_STATEMENTS BODY
    3     | DECLARATION_STATEMENTS PROGRAM_STATEMENTS

    4 DECLARATION_STATEMENTS: DECLARATION_STATEMENT DECLARATION_STATEMENTS
    5                       | DECLARATION_STATEMENT

    6 DECLARATION_STATEMENT: DATA_TYPE VAR_LIST SC

    7 VAR_LIST: VAR COMA VAR_LIST
    8         | VAR

    9 MAIN_TYPE: INT

   10 DATA_TYPE: INT
   11          | CHAR
   12          | FLOAT
   13          | DOUBLE

   14 PROGRAM_STATEMENTS: PROGRAM_STATEMENT PROGRAM_STATEMENTS
   15                   | PROGRAM_STATEMENT

   16 PROGRAM_STATEMENT: VAR EQ A_EXPN SC
   17                  | CONDITIONAL

   18 CONDITIONAL: IF LB CLOG_EXPN RB LCB PROGRAM_STATEMENT RCB ELSE LCB PROGRAM_STATEMENT RCB
   19            | IF LB CLOG_EXPN RB LCB PROGRAM_STATEMENT RCB

   20 CLOG_EXPN: SLOG_EXPN BCMP SLOG_EXPN
   21          | SLOG_EXPN

   22 BCMP: LAND
   23     | LOR

   24 SLOG_EXPN: NOT SLOG_EXPN
   25          | VAR BLOG VAR

   26 BLOG: GTE
   27     | LTE
   28     | GT
   29     | LT
   30     | NEQ
   31     | LEQ

   32 A_EXPN: A_EXPN PLUS A_EXPN
   33       | A_EXPN MINUS A_EXPN
   34       | A_EXPN MUL A_EXPN
   35       | A_EXPN DIV A_EXPN
   36       | A_EXPN MOD A_EXPN
   37       | A_EXPN EXP A_EXPN
   38       | A_EXPN UPLUS A_EXPN
   39       | A_EXPN UMINUS A_EXPN
   40       | LB A_EXPN RB
   41       | VAR


Terminals, with rules where they appear

$end (0) 0
error (256)
HEADER (258) 1
MAIN (259) 1
LB (260) 1 18 19 40
RB (261) 1 18 19 40
LCB (262) 1 18 19
RCB (263) 1 18 19
SC (264) 6 16
COMA (265) 7
VAR (266) 7 8 16 25 41
EQ (267) 16
PLUS (268) 32
MINUS (269) 33
MUL (270) 34
DIV (271) 35
EXP (272) 37
UPLUS (273) 38
UMINUS (274) 39
MOD (275) 36
LT (276) 29
GT (277) 28
LTE (278) 27
GTE (279) 26
NEQ (280) 30
LEQ (281) 31
LAND (282) 22
LOR (283) 23
NOT (284) 24
IF (285) 18 19
ELSE (286) 18
INT (287) 9 10
CHAR (288) 11
FLOAT (289) 12
DOUBLE (290) 13


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
prm (37)
    on left: 1, on right: 0
BODY (38)
    on left: 2 3, on right: 1 2
DECLARATION_STATEMENTS (39)
    on left: 4 5, on right: 2 3 4
DECLARATION_STATEMENT (40)
    on left: 6, on right: 4 5
VAR_LIST (41)
    on left: 7 8, on right: 6 7
MAIN_TYPE (42)
    on left: 9, on right: 1
DATA_TYPE (43)
    on left: 10 11 12 13, on right: 6
PROGRAM_STATEMENTS (44)
    on left: 14 15, on right: 2 3 14
PROGRAM_STATEMENT (45)
    on left: 16 17, on right: 14 15 18 19
CONDITIONAL (46)
    on left: 18 19, on right: 17
CLOG_EXPN (47)
    on left: 20 21, on right: 18 19
BCMP (48)
    on left: 22 23, on right: 20
SLOG_EXPN (49)
    on left: 24 25, on right: 20 21 24
BLOG (50)
    on left: 26 27 28 29 30 31, on right: 25
A_EXPN (51)
    on left: 32 33 34 35 36 37 38 39 40 41, on right: 16 32 33 34 35
    36 37 38 39 40


State 0

    0 $accept: . prm $end

    HEADER  shift, and go to state 1

    prm  go to state 2


State 1

    1 prm: HEADER . MAIN_TYPE MAIN LB RB LCB BODY RCB

    INT  shift, and go to state 3

    MAIN_TYPE  go to state 4


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 5


State 3

    9 MAIN_TYPE: INT .

    $default  reduce using rule 9 (MAIN_TYPE)


State 4

    1 prm: HEADER MAIN_TYPE . MAIN LB RB LCB BODY RCB

    MAIN  shift, and go to state 6


State 5

    0 $accept: prm $end .

    $default  accept


State 6

    1 prm: HEADER MAIN_TYPE MAIN . LB RB LCB BODY RCB

    LB  shift, and go to state 7


State 7

    1 prm: HEADER MAIN_TYPE MAIN LB . RB LCB BODY RCB

    RB  shift, and go to state 8


State 8

    1 prm: HEADER MAIN_TYPE MAIN LB RB . LCB BODY RCB

    LCB  shift, and go to state 9


State 9

    1 prm: HEADER MAIN_TYPE MAIN LB RB LCB . BODY RCB

    INT     shift, and go to state 10
    CHAR    shift, and go to state 11
    FLOAT   shift, and go to state 12
    DOUBLE  shift, and go to state 13

    BODY                    go to state 14
    DECLARATION_STATEMENTS  go to state 15
    DECLARATION_STATEMENT   go to state 16
    DATA_TYPE               go to state 17


State 10

   10 DATA_TYPE: INT .

    $default  reduce using rule 10 (DATA_TYPE)


State 11

   11 DATA_TYPE: CHAR .

    $default  reduce using rule 11 (DATA_TYPE)


State 12

   12 DATA_TYPE: FLOAT .

    $default  reduce using rule 12 (DATA_TYPE)


State 13

   13 DATA_TYPE: DOUBLE .

    $default  reduce using rule 13 (DATA_TYPE)


State 14

    1 prm: HEADER MAIN_TYPE MAIN LB RB LCB BODY . RCB

    RCB  shift, and go to state 18


State 15

    2 BODY: DECLARATION_STATEMENTS . PROGRAM_STATEMENTS BODY
    3     | DECLARATION_STATEMENTS . PROGRAM_STATEMENTS

    VAR  shift, and go to state 19
    IF   shift, and go to state 20

    PROGRAM_STATEMENTS  go to state 21
    PROGRAM_STATEMENT   go to state 22
    CONDITIONAL         go to state 23


State 16

    4 DECLARATION_STATEMENTS: DECLARATION_STATEMENT . DECLARATION_STATEMENTS
    5                       | DECLARATION_STATEMENT .

    INT     shift, and go to state 10
    CHAR    shift, and go to state 11
    FLOAT   shift, and go to state 12
    DOUBLE  shift, and go to state 13

    $default  reduce using rule 5 (DECLARATION_STATEMENTS)

    DECLARATION_STATEMENTS  go to state 24
    DECLARATION_STATEMENT   go to state 16
    DATA_TYPE               go to state 17


State 17

    6 DECLARATION_STATEMENT: DATA_TYPE . VAR_LIST SC

    VAR  shift, and go to state 25

    VAR_LIST  go to state 26


State 18

    1 prm: HEADER MAIN_TYPE MAIN LB RB LCB BODY RCB .

    $default  reduce using rule 1 (prm)


State 19

   16 PROGRAM_STATEMENT: VAR . EQ A_EXPN SC

    EQ  shift, and go to state 27


State 20

   18 CONDITIONAL: IF . LB CLOG_EXPN RB LCB PROGRAM_STATEMENT RCB ELSE LCB PROGRAM_STATEMENT RCB
   19            | IF . LB CLOG_EXPN RB LCB PROGRAM_STATEMENT RCB

    LB  shift, and go to state 28


State 21

    2 BODY: DECLARATION_STATEMENTS PROGRAM_STATEMENTS . BODY
    3     | DECLARATION_STATEMENTS PROGRAM_STATEMENTS .

    INT     shift, and go to state 10
    CHAR    shift, and go to state 11
    FLOAT   shift, and go to state 12
    DOUBLE  shift, and go to state 13

    $default  reduce using rule 3 (BODY)

    BODY                    go to state 29
    DECLARATION_STATEMENTS  go to state 15
    DECLARATION_STATEMENT   go to state 16
    DATA_TYPE               go to state 17


State 22

   14 PROGRAM_STATEMENTS: PROGRAM_STATEMENT . PROGRAM_STATEMENTS
   15                   | PROGRAM_STATEMENT .

    VAR  shift, and go to state 19
    IF   shift, and go to state 20

    $default  reduce using rule 15 (PROGRAM_STATEMENTS)

    PROGRAM_STATEMENTS  go to state 30
    PROGRAM_STATEMENT   go to state 22
    CONDITIONAL         go to state 23


State 23

   17 PROGRAM_STATEMENT: CONDITIONAL .

    $default  reduce using rule 17 (PROGRAM_STATEMENT)


State 24

    4 DECLARATION_STATEMENTS: DECLARATION_STATEMENT DECLARATION_STATEMENTS .

    $default  reduce using rule 4 (DECLARATION_STATEMENTS)


State 25

    7 VAR_LIST: VAR . COMA VAR_LIST
    8         | VAR .

    COMA  shift, and go to state 31

    $default  reduce using rule 8 (VAR_LIST)


State 26

    6 DECLARATION_STATEMENT: DATA_TYPE VAR_LIST . SC

    SC  shift, and go to state 32


State 27

   16 PROGRAM_STATEMENT: VAR EQ . A_EXPN SC

    LB   shift, and go to state 33
    VAR  shift, and go to state 34

    A_EXPN  go to state 35


State 28

   18 CONDITIONAL: IF LB . CLOG_EXPN RB LCB PROGRAM_STATEMENT RCB ELSE LCB PROGRAM_STATEMENT RCB
   19            | IF LB . CLOG_EXPN RB LCB PROGRAM_STATEMENT RCB

    VAR  shift, and go to state 36
    NOT  shift, and go to state 37

    CLOG_EXPN  go to state 38
    SLOG_EXPN  go to state 39


State 29

    2 BODY: DECLARATION_STATEMENTS PROGRAM_STATEMENTS BODY .

    $default  reduce using rule 2 (BODY)


State 30

   14 PROGRAM_STATEMENTS: PROGRAM_STATEMENT PROGRAM_STATEMENTS .

    $default  reduce using rule 14 (PROGRAM_STATEMENTS)


State 31

    7 VAR_LIST: VAR COMA . VAR_LIST

    VAR  shift, and go to state 25

    VAR_LIST  go to state 40


State 32

    6 DECLARATION_STATEMENT: DATA_TYPE VAR_LIST SC .

    $default  reduce using rule 6 (DECLARATION_STATEMENT)


State 33

   40 A_EXPN: LB . A_EXPN RB

    LB   shift, and go to state 33
    VAR  shift, and go to state 34

    A_EXPN  go to state 41


State 34

   41 A_EXPN: VAR .

    $default  reduce using rule 41 (A_EXPN)


State 35

   16 PROGRAM_STATEMENT: VAR EQ A_EXPN . SC
   32 A_EXPN: A_EXPN . PLUS A_EXPN
   33       | A_EXPN . MINUS A_EXPN
   34       | A_EXPN . MUL A_EXPN
   35       | A_EXPN . DIV A_EXPN
   36       | A_EXPN . MOD A_EXPN
   37       | A_EXPN . EXP A_EXPN
   38       | A_EXPN . UPLUS A_EXPN
   39       | A_EXPN . UMINUS A_EXPN

    SC      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    MUL     shift, and go to state 45
    DIV     shift, and go to state 46
    EXP     shift, and go to state 47
    UPLUS   shift, and go to state 48
    UMINUS  shift, and go to state 49
    MOD     shift, and go to state 50


State 36

   25 SLOG_EXPN: VAR . BLOG VAR

    LT   shift, and go to state 51
    GT   shift, and go to state 52
    LTE  shift, and go to state 53
    GTE  shift, and go to state 54
    NEQ  shift, and go to state 55
    LEQ  shift, and go to state 56

    BLOG  go to state 57


State 37

   24 SLOG_EXPN: NOT . SLOG_EXPN

    VAR  shift, and go to state 36
    NOT  shift, and go to state 37

    SLOG_EXPN  go to state 58


State 38

   18 CONDITIONAL: IF LB CLOG_EXPN . RB LCB PROGRAM_STATEMENT RCB ELSE LCB PROGRAM_STATEMENT RCB
   19            | IF LB CLOG_EXPN . RB LCB PROGRAM_STATEMENT RCB

    RB  shift, and go to state 59


State 39

   20 CLOG_EXPN: SLOG_EXPN . BCMP SLOG_EXPN
   21          | SLOG_EXPN .

    LAND  shift, and go to state 60
    LOR   shift, and go to state 61

    $default  reduce using rule 21 (CLOG_EXPN)

    BCMP  go to state 62


State 40

    7 VAR_LIST: VAR COMA VAR_LIST .

    $default  reduce using rule 7 (VAR_LIST)


State 41

   32 A_EXPN: A_EXPN . PLUS A_EXPN
   33       | A_EXPN . MINUS A_EXPN
   34       | A_EXPN . MUL A_EXPN
   35       | A_EXPN . DIV A_EXPN
   36       | A_EXPN . MOD A_EXPN
   37       | A_EXPN . EXP A_EXPN
   38       | A_EXPN . UPLUS A_EXPN
   39       | A_EXPN . UMINUS A_EXPN
   40       | LB A_EXPN . RB

    RB      shift, and go to state 63
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    MUL     shift, and go to state 45
    DIV     shift, and go to state 46
    EXP     shift, and go to state 47
    UPLUS   shift, and go to state 48
    UMINUS  shift, and go to state 49
    MOD     shift, and go to state 50


State 42

   16 PROGRAM_STATEMENT: VAR EQ A_EXPN SC .

    $default  reduce using rule 16 (PROGRAM_STATEMENT)


State 43

   32 A_EXPN: A_EXPN PLUS . A_EXPN

    LB   shift, and go to state 33
    VAR  shift, and go to state 34

    A_EXPN  go to state 64


State 44

   33 A_EXPN: A_EXPN MINUS . A_EXPN

    LB   shift, and go to state 33
    VAR  shift, and go to state 34

    A_EXPN  go to state 65


State 45

   34 A_EXPN: A_EXPN MUL . A_EXPN

    LB   shift, and go to state 33
    VAR  shift, and go to state 34

    A_EXPN  go to state 66


State 46

   35 A_EXPN: A_EXPN DIV . A_EXPN

    LB   shift, and go to state 33
    VAR  shift, and go to state 34

    A_EXPN  go to state 67


State 47

   37 A_EXPN: A_EXPN EXP . A_EXPN

    LB   shift, and go to state 33
    VAR  shift, and go to state 34

    A_EXPN  go to state 68


State 48

   38 A_EXPN: A_EXPN UPLUS . A_EXPN

    LB   shift, and go to state 33
    VAR  shift, and go to state 34

    A_EXPN  go to state 69


State 49

   39 A_EXPN: A_EXPN UMINUS . A_EXPN

    LB   shift, and go to state 33
    VAR  shift, and go to state 34

    A_EXPN  go to state 70


State 50

   36 A_EXPN: A_EXPN MOD . A_EXPN

    LB   shift, and go to state 33
    VAR  shift, and go to state 34

    A_EXPN  go to state 71


State 51

   29 BLOG: LT .

    $default  reduce using rule 29 (BLOG)


State 52

   28 BLOG: GT .

    $default  reduce using rule 28 (BLOG)


State 53

   27 BLOG: LTE .

    $default  reduce using rule 27 (BLOG)


State 54

   26 BLOG: GTE .

    $default  reduce using rule 26 (BLOG)


State 55

   30 BLOG: NEQ .

    $default  reduce using rule 30 (BLOG)


State 56

   31 BLOG: LEQ .

    $default  reduce using rule 31 (BLOG)


State 57

   25 SLOG_EXPN: VAR BLOG . VAR

    VAR  shift, and go to state 72


State 58

   24 SLOG_EXPN: NOT SLOG_EXPN .

    $default  reduce using rule 24 (SLOG_EXPN)


State 59

   18 CONDITIONAL: IF LB CLOG_EXPN RB . LCB PROGRAM_STATEMENT RCB ELSE LCB PROGRAM_STATEMENT RCB
   19            | IF LB CLOG_EXPN RB . LCB PROGRAM_STATEMENT RCB

    LCB  shift, and go to state 73


State 60

   22 BCMP: LAND .

    $default  reduce using rule 22 (BCMP)


State 61

   23 BCMP: LOR .

    $default  reduce using rule 23 (BCMP)


State 62

   20 CLOG_EXPN: SLOG_EXPN BCMP . SLOG_EXPN

    VAR  shift, and go to state 36
    NOT  shift, and go to state 37

    SLOG_EXPN  go to state 74


State 63

   40 A_EXPN: LB A_EXPN RB .

    $default  reduce using rule 40 (A_EXPN)


State 64

   32 A_EXPN: A_EXPN . PLUS A_EXPN
   32       | A_EXPN PLUS A_EXPN .
   33       | A_EXPN . MINUS A_EXPN
   34       | A_EXPN . MUL A_EXPN
   35       | A_EXPN . DIV A_EXPN
   36       | A_EXPN . MOD A_EXPN
   37       | A_EXPN . EXP A_EXPN
   38       | A_EXPN . UPLUS A_EXPN
   39       | A_EXPN . UMINUS A_EXPN

    MUL     shift, and go to state 45
    DIV     shift, and go to state 46
    EXP     shift, and go to state 47
    UPLUS   shift, and go to state 48
    UMINUS  shift, and go to state 49
    MOD     shift, and go to state 50

    $default  reduce using rule 32 (A_EXPN)


State 65

   32 A_EXPN: A_EXPN . PLUS A_EXPN
   33       | A_EXPN . MINUS A_EXPN
   33       | A_EXPN MINUS A_EXPN .
   34       | A_EXPN . MUL A_EXPN
   35       | A_EXPN . DIV A_EXPN
   36       | A_EXPN . MOD A_EXPN
   37       | A_EXPN . EXP A_EXPN
   38       | A_EXPN . UPLUS A_EXPN
   39       | A_EXPN . UMINUS A_EXPN

    MUL     shift, and go to state 45
    DIV     shift, and go to state 46
    EXP     shift, and go to state 47
    UPLUS   shift, and go to state 48
    UMINUS  shift, and go to state 49
    MOD     shift, and go to state 50

    $default  reduce using rule 33 (A_EXPN)


State 66

   32 A_EXPN: A_EXPN . PLUS A_EXPN
   33       | A_EXPN . MINUS A_EXPN
   34       | A_EXPN . MUL A_EXPN
   34       | A_EXPN MUL A_EXPN .
   35       | A_EXPN . DIV A_EXPN
   36       | A_EXPN . MOD A_EXPN
   37       | A_EXPN . EXP A_EXPN
   38       | A_EXPN . UPLUS A_EXPN
   39       | A_EXPN . UMINUS A_EXPN

    EXP     shift, and go to state 47
    UPLUS   shift, and go to state 48
    UMINUS  shift, and go to state 49

    $default  reduce using rule 34 (A_EXPN)


State 67

   32 A_EXPN: A_EXPN . PLUS A_EXPN
   33       | A_EXPN . MINUS A_EXPN
   34       | A_EXPN . MUL A_EXPN
   35       | A_EXPN . DIV A_EXPN
   35       | A_EXPN DIV A_EXPN .
   36       | A_EXPN . MOD A_EXPN
   37       | A_EXPN . EXP A_EXPN
   38       | A_EXPN . UPLUS A_EXPN
   39       | A_EXPN . UMINUS A_EXPN

    EXP     shift, and go to state 47
    UPLUS   shift, and go to state 48
    UMINUS  shift, and go to state 49

    $default  reduce using rule 35 (A_EXPN)


State 68

   32 A_EXPN: A_EXPN . PLUS A_EXPN
   33       | A_EXPN . MINUS A_EXPN
   34       | A_EXPN . MUL A_EXPN
   35       | A_EXPN . DIV A_EXPN
   36       | A_EXPN . MOD A_EXPN
   37       | A_EXPN . EXP A_EXPN
   37       | A_EXPN EXP A_EXPN .
   38       | A_EXPN . UPLUS A_EXPN
   39       | A_EXPN . UMINUS A_EXPN

    EXP     shift, and go to state 47
    UPLUS   shift, and go to state 48
    UMINUS  shift, and go to state 49

    $default  reduce using rule 37 (A_EXPN)


State 69

   32 A_EXPN: A_EXPN . PLUS A_EXPN
   33       | A_EXPN . MINUS A_EXPN
   34       | A_EXPN . MUL A_EXPN
   35       | A_EXPN . DIV A_EXPN
   36       | A_EXPN . MOD A_EXPN
   37       | A_EXPN . EXP A_EXPN
   38       | A_EXPN . UPLUS A_EXPN
   38       | A_EXPN UPLUS A_EXPN .
   39       | A_EXPN . UMINUS A_EXPN

    $default  reduce using rule 38 (A_EXPN)


State 70

   32 A_EXPN: A_EXPN . PLUS A_EXPN
   33       | A_EXPN . MINUS A_EXPN
   34       | A_EXPN . MUL A_EXPN
   35       | A_EXPN . DIV A_EXPN
   36       | A_EXPN . MOD A_EXPN
   37       | A_EXPN . EXP A_EXPN
   38       | A_EXPN . UPLUS A_EXPN
   39       | A_EXPN . UMINUS A_EXPN
   39       | A_EXPN UMINUS A_EXPN .

    $default  reduce using rule 39 (A_EXPN)


State 71

   32 A_EXPN: A_EXPN . PLUS A_EXPN
   33       | A_EXPN . MINUS A_EXPN
   34       | A_EXPN . MUL A_EXPN
   35       | A_EXPN . DIV A_EXPN
   36       | A_EXPN . MOD A_EXPN
   36       | A_EXPN MOD A_EXPN .
   37       | A_EXPN . EXP A_EXPN
   38       | A_EXPN . UPLUS A_EXPN
   39       | A_EXPN . UMINUS A_EXPN

    EXP     shift, and go to state 47
    UPLUS   shift, and go to state 48
    UMINUS  shift, and go to state 49

    $default  reduce using rule 36 (A_EXPN)


State 72

   25 SLOG_EXPN: VAR BLOG VAR .

    $default  reduce using rule 25 (SLOG_EXPN)


State 73

   18 CONDITIONAL: IF LB CLOG_EXPN RB LCB . PROGRAM_STATEMENT RCB ELSE LCB PROGRAM_STATEMENT RCB
   19            | IF LB CLOG_EXPN RB LCB . PROGRAM_STATEMENT RCB

    VAR  shift, and go to state 19
    IF   shift, and go to state 20

    PROGRAM_STATEMENT  go to state 75
    CONDITIONAL        go to state 23


State 74

   20 CLOG_EXPN: SLOG_EXPN BCMP SLOG_EXPN .

    $default  reduce using rule 20 (CLOG_EXPN)


State 75

   18 CONDITIONAL: IF LB CLOG_EXPN RB LCB PROGRAM_STATEMENT . RCB ELSE LCB PROGRAM_STATEMENT RCB
   19            | IF LB CLOG_EXPN RB LCB PROGRAM_STATEMENT . RCB

    RCB  shift, and go to state 76


State 76

   18 CONDITIONAL: IF LB CLOG_EXPN RB LCB PROGRAM_STATEMENT RCB . ELSE LCB PROGRAM_STATEMENT RCB
   19            | IF LB CLOG_EXPN RB LCB PROGRAM_STATEMENT RCB .

    ELSE  shift, and go to state 77

    $default  reduce using rule 19 (CONDITIONAL)


State 77

   18 CONDITIONAL: IF LB CLOG_EXPN RB LCB PROGRAM_STATEMENT RCB ELSE . LCB PROGRAM_STATEMENT RCB

    LCB  shift, and go to state 78


State 78

   18 CONDITIONAL: IF LB CLOG_EXPN RB LCB PROGRAM_STATEMENT RCB ELSE LCB . PROGRAM_STATEMENT RCB

    VAR  shift, and go to state 19
    IF   shift, and go to state 20

    PROGRAM_STATEMENT  go to state 79
    CONDITIONAL        go to state 23


State 79

   18 CONDITIONAL: IF LB CLOG_EXPN RB LCB PROGRAM_STATEMENT RCB ELSE LCB PROGRAM_STATEMENT . RCB

    RCB  shift, and go to state 80


State 80

   18 CONDITIONAL: IF LB CLOG_EXPN RB LCB PROGRAM_STATEMENT RCB ELSE LCB PROGRAM_STATEMENT RCB .

    $default  reduce using rule 18 (CONDITIONAL)
