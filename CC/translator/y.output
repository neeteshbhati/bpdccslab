Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: PROC MAIN LB RB LABEL_BLOCK_LIST

    2 LABEL_BLOCK_LIST: LABEL_BLOCK LABEL_BLOCK_LIST
    3                 | LABEL_BLOCK

    4 LABEL_BLOCK: LABEL_HEAD BODY
    5            | LABEL_HEAD

    6 LABEL_HEAD: LABEL

    7 BODY: STATEMENT BODY
    8     | STATEMENT

    9 STATEMENT: DECLARATION_STATEMENT
   10          | ASSIGNMENT_STATEMENT
   11          | CONDITIONAL_STATEMENT
   12          | ITERATIVE_STATEMENT
   13          | FUNCTION_STATEMENT
   14          | JUMP_STATEMENT

   15 DECLARATION_STATEMENT: VAR VARIABLE_LIST COLN DATA_TYPE SC
   16                      | VAR VARIABLE_LIST COLN ARRAY LSB NUM RSB LSB NUM RSB OF DATA_TYPE SC

   17 VARIABLE_LIST: VARIABLE COMA VARIABLE_LIST
   18              | VARIABLE

   19 DATA_TYPE: INT
   20          | CHAR
   21          | FLOAT
   22          | DOUBLE

   23 ASSIGNMENT_STATEMENT: VARIABLE LSB NUM RSB LSB NUM RSB COLN EQ A_EXPN_LIST SC
   24                     | VARIABLE COLN EQ A_EXPN_LIST SC

   25 A_EXPN_LIST: A_EXPN OP A_EXPN_LIST
   26            | A_EXPN

   27 A_EXPN: VARIABLE LSB NUM RSB LSB NUM RSB
   28       | VARIABLE
   29       | NUM

   30 OP: PLUS
   31   | MINUS
   32   | MUL
   33   | DIV
   34   | MOD

   35 CONDITIONAL_STATEMENT: IF_COND LB CLOG_EXPN RB THEN_COND BODY ELSEIF_LIST

   36 ELSEIF_LIST: ELSEIF_COND LB CLOG_EXPN RB THEN_COND BODY ELSEIF_LIST
   37            | ELSE_COND BODY ENDIF
   38            | ENDIF

   39 IF_COND: IF

   40 THEN_COND: THEN

   41 ELSE_COND: ELSE

   42 ELSEIF_COND: ELSEIF

   43 CLOG_EXPN: SLOG_EXPN BCMP SLOG_EXPN
   44          | SLOG_EXPN

   45 BCMP: AND
   46     | OR

   47 SLOG_EXPN: NOT LB SLOG_EXPN RB
   48          | VARIABLE BLOG VARIABLE
   49          | VARIABLE BLOG NUM

   50 BLOG: GTE
   51     | LTE
   52     | GT
   53     | LT
   54     | NEQ
   55     | LEQ

   56 ITERATIVE_STATEMENT: WHILE_COND LB CLOG_EXPN RB DO_COND BODY ENDWHILE_COND
   57                    | REPEAT_COND BODY UNTIL_COND LB CLOG_EXPN RB
   58                    | FOR_HEADER FOR_BODY

   59 WHILE_COND: WHILE

   60 DO_COND: DO

   61 ENDWHILE_COND: ENDWHILE

   62 REPEAT_COND: REPEAT

   63 UNTIL_COND: UNTIL

   64 FOR_HEADER: FOR LB VARIABLE LT MINUS NUM TO NUM RB

   65 FOR_BODY: DO_COND BODY ENDFOR_COND

   66 ENDFOR_COND: ENDFOR

   67 FUNCTION_STATEMENT: READ LB VARIABLE_LIST RB SC
   68                   | WRITE LB PRINT_LIST RB SC

   69 PRINT_LIST: PRINT_ITEM COMA PRINT_LIST
   70           | PRINT_ITEM

   71 PRINT_ITEM: LITERAL
   72           | VARIABLE

   73 JUMP_STATEMENT: GOTO VARIABLE SC


Terminals, with rules where they appear

$end (0) 0
error (256)
PROC (258) 1
MAIN (259) 1
VAR (260) 15 16
ARRAY (261) 16
OF (262) 16
READ (263) 67
WRITE (264) 68
GOTO (265) 73
PLUS (266) 30
MINUS (267) 31 64
MUL (268) 32
DIV (269) 33
MOD (270) 34
LB (271) 1 35 36 47 56 57 64 67 68
RB (272) 1 35 36 47 56 57 64 67 68
LSB (273) 16 23 27
RSB (274) 16 23 27
COLN (275) 15 16 23 24
SC (276) 15 16 23 24 67 68 73
COMA (277) 17 69
EQ (278) 23 24
AND (279) 45
OR (280) 46
NOT (281) 47
LT (282) 53 64
GT (283) 52
LTE (284) 51
GTE (285) 50
LEQ (286) 55
NEQ (287) 54
IF (288) 39
THEN (289) 40
ELSE (290) 41
ELSEIF (291) 42
ENDIF (292) 37 38
WHILE (293) 59
DO (294) 60
ENDWHILE (295) 61
REPEAT (296) 62
UNTIL (297) 63
FOR (298) 64
TO (299) 64
ENDFOR (300) 66
INT (301) 19
CHAR (302) 20
FLOAT (303) 21
DOUBLE (304) 22
VARIABLE (305) 17 18 23 24 27 28 48 49 64 72 73
NUM (306) 16 23 27 29 49 64
LITERAL (307) 71
LABEL (308) 6


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
PROGRAM (55)
    on left: 1, on right: 0
LABEL_BLOCK_LIST (56)
    on left: 2 3, on right: 1 2
LABEL_BLOCK (57)
    on left: 4 5, on right: 2 3
LABEL_HEAD (58)
    on left: 6, on right: 4 5
BODY (59)
    on left: 7 8, on right: 4 7 35 36 37 56 57 65
STATEMENT (60)
    on left: 9 10 11 12 13 14, on right: 7 8
DECLARATION_STATEMENT (61)
    on left: 15 16, on right: 9
VARIABLE_LIST (62)
    on left: 17 18, on right: 15 16 17 67
DATA_TYPE (63)
    on left: 19 20 21 22, on right: 15 16
ASSIGNMENT_STATEMENT (64)
    on left: 23 24, on right: 10
A_EXPN_LIST (65)
    on left: 25 26, on right: 23 24 25
A_EXPN (66)
    on left: 27 28 29, on right: 25 26
OP (67)
    on left: 30 31 32 33 34, on right: 25
CONDITIONAL_STATEMENT (68)
    on left: 35, on right: 11
ELSEIF_LIST (69)
    on left: 36 37 38, on right: 35 36
IF_COND (70)
    on left: 39, on right: 35
THEN_COND (71)
    on left: 40, on right: 35 36
ELSE_COND (72)
    on left: 41, on right: 37
ELSEIF_COND (73)
    on left: 42, on right: 36
CLOG_EXPN (74)
    on left: 43 44, on right: 35 36 56 57
BCMP (75)
    on left: 45 46, on right: 43
SLOG_EXPN (76)
    on left: 47 48 49, on right: 43 44 47
BLOG (77)
    on left: 50 51 52 53 54 55, on right: 48 49
ITERATIVE_STATEMENT (78)
    on left: 56 57 58, on right: 12
WHILE_COND (79)
    on left: 59, on right: 56
DO_COND (80)
    on left: 60, on right: 56 65
ENDWHILE_COND (81)
    on left: 61, on right: 56
REPEAT_COND (82)
    on left: 62, on right: 57
UNTIL_COND (83)
    on left: 63, on right: 57
FOR_HEADER (84)
    on left: 64, on right: 58
FOR_BODY (85)
    on left: 65, on right: 58
ENDFOR_COND (86)
    on left: 66, on right: 65
FUNCTION_STATEMENT (87)
    on left: 67 68, on right: 13
PRINT_LIST (88)
    on left: 69 70, on right: 68 69
PRINT_ITEM (89)
    on left: 71 72, on right: 69 70
JUMP_STATEMENT (90)
    on left: 73, on right: 14


State 0

    0 $accept: . PROGRAM $end

    PROC  shift, and go to state 1

    PROGRAM  go to state 2


State 1

    1 PROGRAM: PROC . MAIN LB RB LABEL_BLOCK_LIST

    MAIN  shift, and go to state 3


State 2

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 4


State 3

    1 PROGRAM: PROC MAIN . LB RB LABEL_BLOCK_LIST

    LB  shift, and go to state 5


State 4

    0 $accept: PROGRAM $end .

    $default  accept


State 5

    1 PROGRAM: PROC MAIN LB . RB LABEL_BLOCK_LIST

    RB  shift, and go to state 6


State 6

    1 PROGRAM: PROC MAIN LB RB . LABEL_BLOCK_LIST

    LABEL  shift, and go to state 7

    LABEL_BLOCK_LIST  go to state 8
    LABEL_BLOCK       go to state 9
    LABEL_HEAD        go to state 10


State 7

    6 LABEL_HEAD: LABEL .

    $default  reduce using rule 6 (LABEL_HEAD)


State 8

    1 PROGRAM: PROC MAIN LB RB LABEL_BLOCK_LIST .

    $default  reduce using rule 1 (PROGRAM)


State 9

    2 LABEL_BLOCK_LIST: LABEL_BLOCK . LABEL_BLOCK_LIST
    3                 | LABEL_BLOCK .

    LABEL  shift, and go to state 7

    $default  reduce using rule 3 (LABEL_BLOCK_LIST)

    LABEL_BLOCK_LIST  go to state 11
    LABEL_BLOCK       go to state 9
    LABEL_HEAD        go to state 10


State 10

    4 LABEL_BLOCK: LABEL_HEAD . BODY
    5            | LABEL_HEAD .

    VAR       shift, and go to state 12
    READ      shift, and go to state 13
    WRITE     shift, and go to state 14
    GOTO      shift, and go to state 15
    IF        shift, and go to state 16
    WHILE     shift, and go to state 17
    REPEAT    shift, and go to state 18
    FOR       shift, and go to state 19
    VARIABLE  shift, and go to state 20

    $default  reduce using rule 5 (LABEL_BLOCK)

    BODY                   go to state 21
    STATEMENT              go to state 22
    DECLARATION_STATEMENT  go to state 23
    ASSIGNMENT_STATEMENT   go to state 24
    CONDITIONAL_STATEMENT  go to state 25
    IF_COND                go to state 26
    ITERATIVE_STATEMENT    go to state 27
    WHILE_COND             go to state 28
    REPEAT_COND            go to state 29
    FOR_HEADER             go to state 30
    FUNCTION_STATEMENT     go to state 31
    JUMP_STATEMENT         go to state 32


State 11

    2 LABEL_BLOCK_LIST: LABEL_BLOCK LABEL_BLOCK_LIST .

    $default  reduce using rule 2 (LABEL_BLOCK_LIST)


State 12

   15 DECLARATION_STATEMENT: VAR . VARIABLE_LIST COLN DATA_TYPE SC
   16                      | VAR . VARIABLE_LIST COLN ARRAY LSB NUM RSB LSB NUM RSB OF DATA_TYPE SC

    VARIABLE  shift, and go to state 33

    VARIABLE_LIST  go to state 34


State 13

   67 FUNCTION_STATEMENT: READ . LB VARIABLE_LIST RB SC

    LB  shift, and go to state 35


State 14

   68 FUNCTION_STATEMENT: WRITE . LB PRINT_LIST RB SC

    LB  shift, and go to state 36


State 15

   73 JUMP_STATEMENT: GOTO . VARIABLE SC

    VARIABLE  shift, and go to state 37


State 16

   39 IF_COND: IF .

    $default  reduce using rule 39 (IF_COND)


State 17

   59 WHILE_COND: WHILE .

    $default  reduce using rule 59 (WHILE_COND)


State 18

   62 REPEAT_COND: REPEAT .

    $default  reduce using rule 62 (REPEAT_COND)


State 19

   64 FOR_HEADER: FOR . LB VARIABLE LT MINUS NUM TO NUM RB

    LB  shift, and go to state 38


State 20

   23 ASSIGNMENT_STATEMENT: VARIABLE . LSB NUM RSB LSB NUM RSB COLN EQ A_EXPN_LIST SC
   24                     | VARIABLE . COLN EQ A_EXPN_LIST SC

    LSB   shift, and go to state 39
    COLN  shift, and go to state 40


State 21

    4 LABEL_BLOCK: LABEL_HEAD BODY .

    $default  reduce using rule 4 (LABEL_BLOCK)


State 22

    7 BODY: STATEMENT . BODY
    8     | STATEMENT .

    VAR       shift, and go to state 12
    READ      shift, and go to state 13
    WRITE     shift, and go to state 14
    GOTO      shift, and go to state 15
    IF        shift, and go to state 16
    WHILE     shift, and go to state 17
    REPEAT    shift, and go to state 18
    FOR       shift, and go to state 19
    VARIABLE  shift, and go to state 20

    $default  reduce using rule 8 (BODY)

    BODY                   go to state 41
    STATEMENT              go to state 22
    DECLARATION_STATEMENT  go to state 23
    ASSIGNMENT_STATEMENT   go to state 24
    CONDITIONAL_STATEMENT  go to state 25
    IF_COND                go to state 26
    ITERATIVE_STATEMENT    go to state 27
    WHILE_COND             go to state 28
    REPEAT_COND            go to state 29
    FOR_HEADER             go to state 30
    FUNCTION_STATEMENT     go to state 31
    JUMP_STATEMENT         go to state 32


State 23

    9 STATEMENT: DECLARATION_STATEMENT .

    $default  reduce using rule 9 (STATEMENT)


State 24

   10 STATEMENT: ASSIGNMENT_STATEMENT .

    $default  reduce using rule 10 (STATEMENT)


State 25

   11 STATEMENT: CONDITIONAL_STATEMENT .

    $default  reduce using rule 11 (STATEMENT)


State 26

   35 CONDITIONAL_STATEMENT: IF_COND . LB CLOG_EXPN RB THEN_COND BODY ELSEIF_LIST

    LB  shift, and go to state 42


State 27

   12 STATEMENT: ITERATIVE_STATEMENT .

    $default  reduce using rule 12 (STATEMENT)


State 28

   56 ITERATIVE_STATEMENT: WHILE_COND . LB CLOG_EXPN RB DO_COND BODY ENDWHILE_COND

    LB  shift, and go to state 43


State 29

   57 ITERATIVE_STATEMENT: REPEAT_COND . BODY UNTIL_COND LB CLOG_EXPN RB

    VAR       shift, and go to state 12
    READ      shift, and go to state 13
    WRITE     shift, and go to state 14
    GOTO      shift, and go to state 15
    IF        shift, and go to state 16
    WHILE     shift, and go to state 17
    REPEAT    shift, and go to state 18
    FOR       shift, and go to state 19
    VARIABLE  shift, and go to state 20

    BODY                   go to state 44
    STATEMENT              go to state 22
    DECLARATION_STATEMENT  go to state 23
    ASSIGNMENT_STATEMENT   go to state 24
    CONDITIONAL_STATEMENT  go to state 25
    IF_COND                go to state 26
    ITERATIVE_STATEMENT    go to state 27
    WHILE_COND             go to state 28
    REPEAT_COND            go to state 29
    FOR_HEADER             go to state 30
    FUNCTION_STATEMENT     go to state 31
    JUMP_STATEMENT         go to state 32


State 30

   58 ITERATIVE_STATEMENT: FOR_HEADER . FOR_BODY

    DO  shift, and go to state 45

    DO_COND   go to state 46
    FOR_BODY  go to state 47


State 31

   13 STATEMENT: FUNCTION_STATEMENT .

    $default  reduce using rule 13 (STATEMENT)


State 32

   14 STATEMENT: JUMP_STATEMENT .

    $default  reduce using rule 14 (STATEMENT)


State 33

   17 VARIABLE_LIST: VARIABLE . COMA VARIABLE_LIST
   18              | VARIABLE .

    COMA  shift, and go to state 48

    $default  reduce using rule 18 (VARIABLE_LIST)


State 34

   15 DECLARATION_STATEMENT: VAR VARIABLE_LIST . COLN DATA_TYPE SC
   16                      | VAR VARIABLE_LIST . COLN ARRAY LSB NUM RSB LSB NUM RSB OF DATA_TYPE SC

    COLN  shift, and go to state 49


State 35

   67 FUNCTION_STATEMENT: READ LB . VARIABLE_LIST RB SC

    VARIABLE  shift, and go to state 33

    VARIABLE_LIST  go to state 50


State 36

   68 FUNCTION_STATEMENT: WRITE LB . PRINT_LIST RB SC

    VARIABLE  shift, and go to state 51
    LITERAL   shift, and go to state 52

    PRINT_LIST  go to state 53
    PRINT_ITEM  go to state 54


State 37

   73 JUMP_STATEMENT: GOTO VARIABLE . SC

    SC  shift, and go to state 55


State 38

   64 FOR_HEADER: FOR LB . VARIABLE LT MINUS NUM TO NUM RB

    VARIABLE  shift, and go to state 56


State 39

   23 ASSIGNMENT_STATEMENT: VARIABLE LSB . NUM RSB LSB NUM RSB COLN EQ A_EXPN_LIST SC

    NUM  shift, and go to state 57


State 40

   24 ASSIGNMENT_STATEMENT: VARIABLE COLN . EQ A_EXPN_LIST SC

    EQ  shift, and go to state 58


State 41

    7 BODY: STATEMENT BODY .

    $default  reduce using rule 7 (BODY)


State 42

   35 CONDITIONAL_STATEMENT: IF_COND LB . CLOG_EXPN RB THEN_COND BODY ELSEIF_LIST

    NOT       shift, and go to state 59
    VARIABLE  shift, and go to state 60

    CLOG_EXPN  go to state 61
    SLOG_EXPN  go to state 62


State 43

   56 ITERATIVE_STATEMENT: WHILE_COND LB . CLOG_EXPN RB DO_COND BODY ENDWHILE_COND

    NOT       shift, and go to state 59
    VARIABLE  shift, and go to state 60

    CLOG_EXPN  go to state 63
    SLOG_EXPN  go to state 62


State 44

   57 ITERATIVE_STATEMENT: REPEAT_COND BODY . UNTIL_COND LB CLOG_EXPN RB

    UNTIL  shift, and go to state 64

    UNTIL_COND  go to state 65


State 45

   60 DO_COND: DO .

    $default  reduce using rule 60 (DO_COND)


State 46

   65 FOR_BODY: DO_COND . BODY ENDFOR_COND

    VAR       shift, and go to state 12
    READ      shift, and go to state 13
    WRITE     shift, and go to state 14
    GOTO      shift, and go to state 15
    IF        shift, and go to state 16
    WHILE     shift, and go to state 17
    REPEAT    shift, and go to state 18
    FOR       shift, and go to state 19
    VARIABLE  shift, and go to state 20

    BODY                   go to state 66
    STATEMENT              go to state 22
    DECLARATION_STATEMENT  go to state 23
    ASSIGNMENT_STATEMENT   go to state 24
    CONDITIONAL_STATEMENT  go to state 25
    IF_COND                go to state 26
    ITERATIVE_STATEMENT    go to state 27
    WHILE_COND             go to state 28
    REPEAT_COND            go to state 29
    FOR_HEADER             go to state 30
    FUNCTION_STATEMENT     go to state 31
    JUMP_STATEMENT         go to state 32


State 47

   58 ITERATIVE_STATEMENT: FOR_HEADER FOR_BODY .

    $default  reduce using rule 58 (ITERATIVE_STATEMENT)


State 48

   17 VARIABLE_LIST: VARIABLE COMA . VARIABLE_LIST

    VARIABLE  shift, and go to state 33

    VARIABLE_LIST  go to state 67


State 49

   15 DECLARATION_STATEMENT: VAR VARIABLE_LIST COLN . DATA_TYPE SC
   16                      | VAR VARIABLE_LIST COLN . ARRAY LSB NUM RSB LSB NUM RSB OF DATA_TYPE SC

    ARRAY   shift, and go to state 68
    INT     shift, and go to state 69
    CHAR    shift, and go to state 70
    FLOAT   shift, and go to state 71
    DOUBLE  shift, and go to state 72

    DATA_TYPE  go to state 73


State 50

   67 FUNCTION_STATEMENT: READ LB VARIABLE_LIST . RB SC

    RB  shift, and go to state 74


State 51

   72 PRINT_ITEM: VARIABLE .

    $default  reduce using rule 72 (PRINT_ITEM)


State 52

   71 PRINT_ITEM: LITERAL .

    $default  reduce using rule 71 (PRINT_ITEM)


State 53

   68 FUNCTION_STATEMENT: WRITE LB PRINT_LIST . RB SC

    RB  shift, and go to state 75


State 54

   69 PRINT_LIST: PRINT_ITEM . COMA PRINT_LIST
   70           | PRINT_ITEM .

    COMA  shift, and go to state 76

    $default  reduce using rule 70 (PRINT_LIST)


State 55

   73 JUMP_STATEMENT: GOTO VARIABLE SC .

    $default  reduce using rule 73 (JUMP_STATEMENT)


State 56

   64 FOR_HEADER: FOR LB VARIABLE . LT MINUS NUM TO NUM RB

    LT  shift, and go to state 77


State 57

   23 ASSIGNMENT_STATEMENT: VARIABLE LSB NUM . RSB LSB NUM RSB COLN EQ A_EXPN_LIST SC

    RSB  shift, and go to state 78


State 58

   24 ASSIGNMENT_STATEMENT: VARIABLE COLN EQ . A_EXPN_LIST SC

    VARIABLE  shift, and go to state 79
    NUM       shift, and go to state 80

    A_EXPN_LIST  go to state 81
    A_EXPN       go to state 82


State 59

   47 SLOG_EXPN: NOT . LB SLOG_EXPN RB

    LB  shift, and go to state 83


State 60

   48 SLOG_EXPN: VARIABLE . BLOG VARIABLE
   49          | VARIABLE . BLOG NUM

    LT   shift, and go to state 84
    GT   shift, and go to state 85
    LTE  shift, and go to state 86
    GTE  shift, and go to state 87
    LEQ  shift, and go to state 88
    NEQ  shift, and go to state 89

    BLOG  go to state 90


State 61

   35 CONDITIONAL_STATEMENT: IF_COND LB CLOG_EXPN . RB THEN_COND BODY ELSEIF_LIST

    RB  shift, and go to state 91


State 62

   43 CLOG_EXPN: SLOG_EXPN . BCMP SLOG_EXPN
   44          | SLOG_EXPN .

    AND  shift, and go to state 92
    OR   shift, and go to state 93

    $default  reduce using rule 44 (CLOG_EXPN)

    BCMP  go to state 94


State 63

   56 ITERATIVE_STATEMENT: WHILE_COND LB CLOG_EXPN . RB DO_COND BODY ENDWHILE_COND

    RB  shift, and go to state 95


State 64

   63 UNTIL_COND: UNTIL .

    $default  reduce using rule 63 (UNTIL_COND)


State 65

   57 ITERATIVE_STATEMENT: REPEAT_COND BODY UNTIL_COND . LB CLOG_EXPN RB

    LB  shift, and go to state 96


State 66

   65 FOR_BODY: DO_COND BODY . ENDFOR_COND

    ENDFOR  shift, and go to state 97

    ENDFOR_COND  go to state 98


State 67

   17 VARIABLE_LIST: VARIABLE COMA VARIABLE_LIST .

    $default  reduce using rule 17 (VARIABLE_LIST)


State 68

   16 DECLARATION_STATEMENT: VAR VARIABLE_LIST COLN ARRAY . LSB NUM RSB LSB NUM RSB OF DATA_TYPE SC

    LSB  shift, and go to state 99


State 69

   19 DATA_TYPE: INT .

    $default  reduce using rule 19 (DATA_TYPE)


State 70

   20 DATA_TYPE: CHAR .

    $default  reduce using rule 20 (DATA_TYPE)


State 71

   21 DATA_TYPE: FLOAT .

    $default  reduce using rule 21 (DATA_TYPE)


State 72

   22 DATA_TYPE: DOUBLE .

    $default  reduce using rule 22 (DATA_TYPE)


State 73

   15 DECLARATION_STATEMENT: VAR VARIABLE_LIST COLN DATA_TYPE . SC

    SC  shift, and go to state 100


State 74

   67 FUNCTION_STATEMENT: READ LB VARIABLE_LIST RB . SC

    SC  shift, and go to state 101


State 75

   68 FUNCTION_STATEMENT: WRITE LB PRINT_LIST RB . SC

    SC  shift, and go to state 102


State 76

   69 PRINT_LIST: PRINT_ITEM COMA . PRINT_LIST

    VARIABLE  shift, and go to state 51
    LITERAL   shift, and go to state 52

    PRINT_LIST  go to state 103
    PRINT_ITEM  go to state 54


State 77

   64 FOR_HEADER: FOR LB VARIABLE LT . MINUS NUM TO NUM RB

    MINUS  shift, and go to state 104


State 78

   23 ASSIGNMENT_STATEMENT: VARIABLE LSB NUM RSB . LSB NUM RSB COLN EQ A_EXPN_LIST SC

    LSB  shift, and go to state 105


State 79

   27 A_EXPN: VARIABLE . LSB NUM RSB LSB NUM RSB
   28       | VARIABLE .

    LSB  shift, and go to state 106

    $default  reduce using rule 28 (A_EXPN)


State 80

   29 A_EXPN: NUM .

    $default  reduce using rule 29 (A_EXPN)


State 81

   24 ASSIGNMENT_STATEMENT: VARIABLE COLN EQ A_EXPN_LIST . SC

    SC  shift, and go to state 107


State 82

   25 A_EXPN_LIST: A_EXPN . OP A_EXPN_LIST
   26            | A_EXPN .

    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    MUL    shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 26 (A_EXPN_LIST)

    OP  go to state 113


State 83

   47 SLOG_EXPN: NOT LB . SLOG_EXPN RB

    NOT       shift, and go to state 59
    VARIABLE  shift, and go to state 60

    SLOG_EXPN  go to state 114


State 84

   53 BLOG: LT .

    $default  reduce using rule 53 (BLOG)


State 85

   52 BLOG: GT .

    $default  reduce using rule 52 (BLOG)


State 86

   51 BLOG: LTE .

    $default  reduce using rule 51 (BLOG)


State 87

   50 BLOG: GTE .

    $default  reduce using rule 50 (BLOG)


State 88

   55 BLOG: LEQ .

    $default  reduce using rule 55 (BLOG)


State 89

   54 BLOG: NEQ .

    $default  reduce using rule 54 (BLOG)


State 90

   48 SLOG_EXPN: VARIABLE BLOG . VARIABLE
   49          | VARIABLE BLOG . NUM

    VARIABLE  shift, and go to state 115
    NUM       shift, and go to state 116


State 91

   35 CONDITIONAL_STATEMENT: IF_COND LB CLOG_EXPN RB . THEN_COND BODY ELSEIF_LIST

    THEN  shift, and go to state 117

    THEN_COND  go to state 118


State 92

   45 BCMP: AND .

    $default  reduce using rule 45 (BCMP)


State 93

   46 BCMP: OR .

    $default  reduce using rule 46 (BCMP)


State 94

   43 CLOG_EXPN: SLOG_EXPN BCMP . SLOG_EXPN

    NOT       shift, and go to state 59
    VARIABLE  shift, and go to state 60

    SLOG_EXPN  go to state 119


State 95

   56 ITERATIVE_STATEMENT: WHILE_COND LB CLOG_EXPN RB . DO_COND BODY ENDWHILE_COND

    DO  shift, and go to state 45

    DO_COND  go to state 120


State 96

   57 ITERATIVE_STATEMENT: REPEAT_COND BODY UNTIL_COND LB . CLOG_EXPN RB

    NOT       shift, and go to state 59
    VARIABLE  shift, and go to state 60

    CLOG_EXPN  go to state 121
    SLOG_EXPN  go to state 62


State 97

   66 ENDFOR_COND: ENDFOR .

    $default  reduce using rule 66 (ENDFOR_COND)


State 98

   65 FOR_BODY: DO_COND BODY ENDFOR_COND .

    $default  reduce using rule 65 (FOR_BODY)


State 99

   16 DECLARATION_STATEMENT: VAR VARIABLE_LIST COLN ARRAY LSB . NUM RSB LSB NUM RSB OF DATA_TYPE SC

    NUM  shift, and go to state 122


State 100

   15 DECLARATION_STATEMENT: VAR VARIABLE_LIST COLN DATA_TYPE SC .

    $default  reduce using rule 15 (DECLARATION_STATEMENT)


State 101

   67 FUNCTION_STATEMENT: READ LB VARIABLE_LIST RB SC .

    $default  reduce using rule 67 (FUNCTION_STATEMENT)


State 102

   68 FUNCTION_STATEMENT: WRITE LB PRINT_LIST RB SC .

    $default  reduce using rule 68 (FUNCTION_STATEMENT)


State 103

   69 PRINT_LIST: PRINT_ITEM COMA PRINT_LIST .

    $default  reduce using rule 69 (PRINT_LIST)


State 104

   64 FOR_HEADER: FOR LB VARIABLE LT MINUS . NUM TO NUM RB

    NUM  shift, and go to state 123


State 105

   23 ASSIGNMENT_STATEMENT: VARIABLE LSB NUM RSB LSB . NUM RSB COLN EQ A_EXPN_LIST SC

    NUM  shift, and go to state 124


State 106

   27 A_EXPN: VARIABLE LSB . NUM RSB LSB NUM RSB

    NUM  shift, and go to state 125


State 107

   24 ASSIGNMENT_STATEMENT: VARIABLE COLN EQ A_EXPN_LIST SC .

    $default  reduce using rule 24 (ASSIGNMENT_STATEMENT)


State 108

   30 OP: PLUS .

    $default  reduce using rule 30 (OP)


State 109

   31 OP: MINUS .

    $default  reduce using rule 31 (OP)


State 110

   32 OP: MUL .

    $default  reduce using rule 32 (OP)


State 111

   33 OP: DIV .

    $default  reduce using rule 33 (OP)


State 112

   34 OP: MOD .

    $default  reduce using rule 34 (OP)


State 113

   25 A_EXPN_LIST: A_EXPN OP . A_EXPN_LIST

    VARIABLE  shift, and go to state 79
    NUM       shift, and go to state 80

    A_EXPN_LIST  go to state 126
    A_EXPN       go to state 82


State 114

   47 SLOG_EXPN: NOT LB SLOG_EXPN . RB

    RB  shift, and go to state 127


State 115

   48 SLOG_EXPN: VARIABLE BLOG VARIABLE .

    $default  reduce using rule 48 (SLOG_EXPN)


State 116

   49 SLOG_EXPN: VARIABLE BLOG NUM .

    $default  reduce using rule 49 (SLOG_EXPN)


State 117

   40 THEN_COND: THEN .

    $default  reduce using rule 40 (THEN_COND)


State 118

   35 CONDITIONAL_STATEMENT: IF_COND LB CLOG_EXPN RB THEN_COND . BODY ELSEIF_LIST

    VAR       shift, and go to state 12
    READ      shift, and go to state 13
    WRITE     shift, and go to state 14
    GOTO      shift, and go to state 15
    IF        shift, and go to state 16
    WHILE     shift, and go to state 17
    REPEAT    shift, and go to state 18
    FOR       shift, and go to state 19
    VARIABLE  shift, and go to state 20

    BODY                   go to state 128
    STATEMENT              go to state 22
    DECLARATION_STATEMENT  go to state 23
    ASSIGNMENT_STATEMENT   go to state 24
    CONDITIONAL_STATEMENT  go to state 25
    IF_COND                go to state 26
    ITERATIVE_STATEMENT    go to state 27
    WHILE_COND             go to state 28
    REPEAT_COND            go to state 29
    FOR_HEADER             go to state 30
    FUNCTION_STATEMENT     go to state 31
    JUMP_STATEMENT         go to state 32


State 119

   43 CLOG_EXPN: SLOG_EXPN BCMP SLOG_EXPN .

    $default  reduce using rule 43 (CLOG_EXPN)


State 120

   56 ITERATIVE_STATEMENT: WHILE_COND LB CLOG_EXPN RB DO_COND . BODY ENDWHILE_COND

    VAR       shift, and go to state 12
    READ      shift, and go to state 13
    WRITE     shift, and go to state 14
    GOTO      shift, and go to state 15
    IF        shift, and go to state 16
    WHILE     shift, and go to state 17
    REPEAT    shift, and go to state 18
    FOR       shift, and go to state 19
    VARIABLE  shift, and go to state 20

    BODY                   go to state 129
    STATEMENT              go to state 22
    DECLARATION_STATEMENT  go to state 23
    ASSIGNMENT_STATEMENT   go to state 24
    CONDITIONAL_STATEMENT  go to state 25
    IF_COND                go to state 26
    ITERATIVE_STATEMENT    go to state 27
    WHILE_COND             go to state 28
    REPEAT_COND            go to state 29
    FOR_HEADER             go to state 30
    FUNCTION_STATEMENT     go to state 31
    JUMP_STATEMENT         go to state 32


State 121

   57 ITERATIVE_STATEMENT: REPEAT_COND BODY UNTIL_COND LB CLOG_EXPN . RB

    RB  shift, and go to state 130


State 122

   16 DECLARATION_STATEMENT: VAR VARIABLE_LIST COLN ARRAY LSB NUM . RSB LSB NUM RSB OF DATA_TYPE SC

    RSB  shift, and go to state 131


State 123

   64 FOR_HEADER: FOR LB VARIABLE LT MINUS NUM . TO NUM RB

    TO  shift, and go to state 132


State 124

   23 ASSIGNMENT_STATEMENT: VARIABLE LSB NUM RSB LSB NUM . RSB COLN EQ A_EXPN_LIST SC

    RSB  shift, and go to state 133


State 125

   27 A_EXPN: VARIABLE LSB NUM . RSB LSB NUM RSB

    RSB  shift, and go to state 134


State 126

   25 A_EXPN_LIST: A_EXPN OP A_EXPN_LIST .

    $default  reduce using rule 25 (A_EXPN_LIST)


State 127

   47 SLOG_EXPN: NOT LB SLOG_EXPN RB .

    $default  reduce using rule 47 (SLOG_EXPN)


State 128

   35 CONDITIONAL_STATEMENT: IF_COND LB CLOG_EXPN RB THEN_COND BODY . ELSEIF_LIST

    ELSE    shift, and go to state 135
    ELSEIF  shift, and go to state 136
    ENDIF   shift, and go to state 137

    ELSEIF_LIST  go to state 138
    ELSE_COND    go to state 139
    ELSEIF_COND  go to state 140


State 129

   56 ITERATIVE_STATEMENT: WHILE_COND LB CLOG_EXPN RB DO_COND BODY . ENDWHILE_COND

    ENDWHILE  shift, and go to state 141

    ENDWHILE_COND  go to state 142


State 130

   57 ITERATIVE_STATEMENT: REPEAT_COND BODY UNTIL_COND LB CLOG_EXPN RB .

    $default  reduce using rule 57 (ITERATIVE_STATEMENT)


State 131

   16 DECLARATION_STATEMENT: VAR VARIABLE_LIST COLN ARRAY LSB NUM RSB . LSB NUM RSB OF DATA_TYPE SC

    LSB  shift, and go to state 143


State 132

   64 FOR_HEADER: FOR LB VARIABLE LT MINUS NUM TO . NUM RB

    NUM  shift, and go to state 144


State 133

   23 ASSIGNMENT_STATEMENT: VARIABLE LSB NUM RSB LSB NUM RSB . COLN EQ A_EXPN_LIST SC

    COLN  shift, and go to state 145


State 134

   27 A_EXPN: VARIABLE LSB NUM RSB . LSB NUM RSB

    LSB  shift, and go to state 146


State 135

   41 ELSE_COND: ELSE .

    $default  reduce using rule 41 (ELSE_COND)


State 136

   42 ELSEIF_COND: ELSEIF .

    $default  reduce using rule 42 (ELSEIF_COND)


State 137

   38 ELSEIF_LIST: ENDIF .

    $default  reduce using rule 38 (ELSEIF_LIST)


State 138

   35 CONDITIONAL_STATEMENT: IF_COND LB CLOG_EXPN RB THEN_COND BODY ELSEIF_LIST .

    $default  reduce using rule 35 (CONDITIONAL_STATEMENT)


State 139

   37 ELSEIF_LIST: ELSE_COND . BODY ENDIF

    VAR       shift, and go to state 12
    READ      shift, and go to state 13
    WRITE     shift, and go to state 14
    GOTO      shift, and go to state 15
    IF        shift, and go to state 16
    WHILE     shift, and go to state 17
    REPEAT    shift, and go to state 18
    FOR       shift, and go to state 19
    VARIABLE  shift, and go to state 20

    BODY                   go to state 147
    STATEMENT              go to state 22
    DECLARATION_STATEMENT  go to state 23
    ASSIGNMENT_STATEMENT   go to state 24
    CONDITIONAL_STATEMENT  go to state 25
    IF_COND                go to state 26
    ITERATIVE_STATEMENT    go to state 27
    WHILE_COND             go to state 28
    REPEAT_COND            go to state 29
    FOR_HEADER             go to state 30
    FUNCTION_STATEMENT     go to state 31
    JUMP_STATEMENT         go to state 32


State 140

   36 ELSEIF_LIST: ELSEIF_COND . LB CLOG_EXPN RB THEN_COND BODY ELSEIF_LIST

    LB  shift, and go to state 148


State 141

   61 ENDWHILE_COND: ENDWHILE .

    $default  reduce using rule 61 (ENDWHILE_COND)


State 142

   56 ITERATIVE_STATEMENT: WHILE_COND LB CLOG_EXPN RB DO_COND BODY ENDWHILE_COND .

    $default  reduce using rule 56 (ITERATIVE_STATEMENT)


State 143

   16 DECLARATION_STATEMENT: VAR VARIABLE_LIST COLN ARRAY LSB NUM RSB LSB . NUM RSB OF DATA_TYPE SC

    NUM  shift, and go to state 149


State 144

   64 FOR_HEADER: FOR LB VARIABLE LT MINUS NUM TO NUM . RB

    RB  shift, and go to state 150


State 145

   23 ASSIGNMENT_STATEMENT: VARIABLE LSB NUM RSB LSB NUM RSB COLN . EQ A_EXPN_LIST SC

    EQ  shift, and go to state 151


State 146

   27 A_EXPN: VARIABLE LSB NUM RSB LSB . NUM RSB

    NUM  shift, and go to state 152


State 147

   37 ELSEIF_LIST: ELSE_COND BODY . ENDIF

    ENDIF  shift, and go to state 153


State 148

   36 ELSEIF_LIST: ELSEIF_COND LB . CLOG_EXPN RB THEN_COND BODY ELSEIF_LIST

    NOT       shift, and go to state 59
    VARIABLE  shift, and go to state 60

    CLOG_EXPN  go to state 154
    SLOG_EXPN  go to state 62


State 149

   16 DECLARATION_STATEMENT: VAR VARIABLE_LIST COLN ARRAY LSB NUM RSB LSB NUM . RSB OF DATA_TYPE SC

    RSB  shift, and go to state 155


State 150

   64 FOR_HEADER: FOR LB VARIABLE LT MINUS NUM TO NUM RB .

    $default  reduce using rule 64 (FOR_HEADER)


State 151

   23 ASSIGNMENT_STATEMENT: VARIABLE LSB NUM RSB LSB NUM RSB COLN EQ . A_EXPN_LIST SC

    VARIABLE  shift, and go to state 79
    NUM       shift, and go to state 80

    A_EXPN_LIST  go to state 156
    A_EXPN       go to state 82


State 152

   27 A_EXPN: VARIABLE LSB NUM RSB LSB NUM . RSB

    RSB  shift, and go to state 157


State 153

   37 ELSEIF_LIST: ELSE_COND BODY ENDIF .

    $default  reduce using rule 37 (ELSEIF_LIST)


State 154

   36 ELSEIF_LIST: ELSEIF_COND LB CLOG_EXPN . RB THEN_COND BODY ELSEIF_LIST

    RB  shift, and go to state 158


State 155

   16 DECLARATION_STATEMENT: VAR VARIABLE_LIST COLN ARRAY LSB NUM RSB LSB NUM RSB . OF DATA_TYPE SC

    OF  shift, and go to state 159


State 156

   23 ASSIGNMENT_STATEMENT: VARIABLE LSB NUM RSB LSB NUM RSB COLN EQ A_EXPN_LIST . SC

    SC  shift, and go to state 160


State 157

   27 A_EXPN: VARIABLE LSB NUM RSB LSB NUM RSB .

    $default  reduce using rule 27 (A_EXPN)


State 158

   36 ELSEIF_LIST: ELSEIF_COND LB CLOG_EXPN RB . THEN_COND BODY ELSEIF_LIST

    THEN  shift, and go to state 117

    THEN_COND  go to state 161


State 159

   16 DECLARATION_STATEMENT: VAR VARIABLE_LIST COLN ARRAY LSB NUM RSB LSB NUM RSB OF . DATA_TYPE SC

    INT     shift, and go to state 69
    CHAR    shift, and go to state 70
    FLOAT   shift, and go to state 71
    DOUBLE  shift, and go to state 72

    DATA_TYPE  go to state 162


State 160

   23 ASSIGNMENT_STATEMENT: VARIABLE LSB NUM RSB LSB NUM RSB COLN EQ A_EXPN_LIST SC .

    $default  reduce using rule 23 (ASSIGNMENT_STATEMENT)


State 161

   36 ELSEIF_LIST: ELSEIF_COND LB CLOG_EXPN RB THEN_COND . BODY ELSEIF_LIST

    VAR       shift, and go to state 12
    READ      shift, and go to state 13
    WRITE     shift, and go to state 14
    GOTO      shift, and go to state 15
    IF        shift, and go to state 16
    WHILE     shift, and go to state 17
    REPEAT    shift, and go to state 18
    FOR       shift, and go to state 19
    VARIABLE  shift, and go to state 20

    BODY                   go to state 163
    STATEMENT              go to state 22
    DECLARATION_STATEMENT  go to state 23
    ASSIGNMENT_STATEMENT   go to state 24
    CONDITIONAL_STATEMENT  go to state 25
    IF_COND                go to state 26
    ITERATIVE_STATEMENT    go to state 27
    WHILE_COND             go to state 28
    REPEAT_COND            go to state 29
    FOR_HEADER             go to state 30
    FUNCTION_STATEMENT     go to state 31
    JUMP_STATEMENT         go to state 32


State 162

   16 DECLARATION_STATEMENT: VAR VARIABLE_LIST COLN ARRAY LSB NUM RSB LSB NUM RSB OF DATA_TYPE . SC

    SC  shift, and go to state 164


State 163

   36 ELSEIF_LIST: ELSEIF_COND LB CLOG_EXPN RB THEN_COND BODY . ELSEIF_LIST

    ELSE    shift, and go to state 135
    ELSEIF  shift, and go to state 136
    ENDIF   shift, and go to state 137

    ELSEIF_LIST  go to state 165
    ELSE_COND    go to state 139
    ELSEIF_COND  go to state 140


State 164

   16 DECLARATION_STATEMENT: VAR VARIABLE_LIST COLN ARRAY LSB NUM RSB LSB NUM RSB OF DATA_TYPE SC .

    $default  reduce using rule 16 (DECLARATION_STATEMENT)


State 165

   36 ELSEIF_LIST: ELSEIF_COND LB CLOG_EXPN RB THEN_COND BODY ELSEIF_LIST .

    $default  reduce using rule 36 (ELSEIF_LIST)
